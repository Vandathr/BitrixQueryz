

Функция ОсновнаяРабота(аргСтрUrl, аргСтрPostЗапрос) Экспорт
	
	стрОсновнойАдрес = "kama-rik.bitrix24.ru";	
	
	ВебСоедининение = Новый HTTPСоединение(стрОсновнойАдрес, 443, , , , , Новый ЗащищенноеСоединениеOpenSSL);
	
	ВебЗапрос = Новый HTTPЗапрос(аргСтрUrl);
	
	
	ВебЗапрос.УстановитьТелоИзСтроки(аргСтрPostЗапрос, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	ВебОтвет = ВебСоедининение.ОтправитьДляОбработки(ВебЗапрос);
	
	сыройОтвет = ВебОтвет.ПолучитьТелоКакСтроку();
	
	обработанныйОтвет = КонвертироватьJSONВСоответствие(сыройОтвет);
	
	Результат = Неопределено;
	
	Если обработанныйОтвет["result"] = Неопределено Тогда		
		Результат = обработанныйОтвет;		
	Иначе		
		Результат = обработанныйОтвет["result"];		
	КонецЕсли;
		
	Возврат СобратьДеревоЗначенииИзСоответствия(Результат);
	
КонецФункции



Функция СоздатьТаблицуАргументов(аргМасЭлементы) Экспорт
	
	массивТипов = Новый Массив();
	массивТипов.Добавить(Тип("Строка"));
	
	типДляКолонок = Новый ОписаниеТипов(массивТипов);
	
	ТабЗначДанные = Новый ТаблицаЗначений;
	ТабЗначДанные.Колонки.Добавить("Название", типДляКолонок);
	ТабЗначДанные.Колонки.Добавить("Значение", типДляКолонок);
	
	Для Каждого элМас Из аргМасЭлементы Цикл
		
		добавленнаяСтрока = ТабЗначДанные.Добавить();
		добавленнаяСтрока.Название = элМас.Ключ;
		добавленнаяСтрока.Значение = элМас.Значение;
		
	КонецЦикла;
	
	Возврат ТабЗначДанные;	
	
КонецФункции



Функция КонвертироватьJSONВСоответствие(аргСтрJson)

	обЧитатель = Новый ЧтениеJSON();
	обЧитатель.УстановитьСтроку(аргСтрJson);	
	СоотвРезультат = ПрочитатьJSON(обЧитатель, Истина,); 
	обЧитатель.Закрыть();
	
	Возврат СоотвРезультат;
	
КонецФункции



Функция СобратьДеревоЗначенииИзСоответствия(аргСоотвИсточник)
	
	ДерЗначРезультат = Новый ДеревоЗначений;
	ДерЗначРезультат.Колонки.Добавить("Название");
	ДерЗначРезультат.Колонки.Добавить("Значение");
	
	корневойУзел = ДерЗначРезультат.Строки.Добавить();
	корневойУзел.Название = "result";
	корневойУзел.Значение = ТипЗнч(аргСоотвИсточник);
		
	РазобратьУзелДерева(корневойУзел, аргСоотвИсточник);
		
	Возврат ДерЗначРезультат;
	
КонецФункции



Функция РазобратьУзелДерева(аргУзелДереваПриёмник, аргСоотвУзелДереваИсточник)
	
	
	
	Если ТипЗнч(аргСоотвУзелДереваИсточник) = Тип("Соответствие") Тогда
		
		аргУзелДереваПриёмник.Значение = ТипЗнч(аргСоотвУзелДереваИсточник);
		
		Для Каждого элСоотв Из аргСоотвУзелДереваИсточник Цикл
			
			добавленнаяСтрока = аргУзелДереваПриёмник.Строки.Добавить();
			добавленнаяСтрока.Название = элСоотв.Ключ;
			
			РазобратьУзелДерева(добавленнаяСтрока, элСоотв.Значение);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(аргСоотвУзелДереваИсточник) = Тип("Массив") Тогда
		
		аргУзелДереваПриёмник.Значение = ТипЗнч(аргСоотвУзелДереваИсточник);
		
		  перИндекс = 0;	
		
		  Для Каждого элСоотв Из аргСоотвУзелДереваИсточник Цикл
			
			добавленнаяСтрока = аргУзелДереваПриёмник.Строки.Добавить();
			добавленнаяСтрока.Название = перИндекс;
			добавленнаяСтрока.Значение = перИндекс;
			
			РазобратьУзелДерева(добавленнаяСтрока, элСоотв);
			
			перИндекс = перИндекс + 1;
			
		КонецЦикла;

		
	ИначеЕсли ТипЗнч(аргСоотвУзелДереваИсточник) = Тип("Строка") ИЛИ ТипЗнч(аргСоотвУзелДереваИсточник) = Тип("Число") или ТипЗнч(аргСоотвУзелДереваИсточник) = Тип("Булево") Тогда 
		
		аргУзелДереваПриёмник.Значение = аргСоотвУзелДереваИсточник;
		
	КонецЕсли;
	

	
КонецФункции



